[tool.poetry]
name = "norg-py"
version = "0.1.0"
description = "Python parser for the Norg file format"
authors = ["NTBBloodbath <bloodbathalchemist@protonmail.com>", "VSedov <viv.sv@hotmail.com>"]
license = "GPL-3.0"
readme = "README.md"
# packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
parglare = "^0.16.1"
attrs = "^23.1.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.270"
black = "^23.3.0"
pytest = "^7.3.1"
pytest-black = "^0.3.12"
pytest-ruff = "^0.0.6"
pytest-print = "^0.3.1"
isort = "^5.12.0"
coverage = "^7.2.7"
debugpy = "^1.6.7"
icecream = "^2.1.3"
taskipy = "^1.11.0"
pytest-cov = "^4.1.0"
pycln = "^2.1.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
parallel = true
branch = true
source_pkgs = ["norg/src"]
source = ["norg/tests"]
omit = ["**/__main__.py"]

[tool.coverage.report]
show_missing = true
fail_under = 0 # temp
precision = 2
exclude_lines = ["pragma: no cover", "pass"]

[tool.isort]
multi_line_output = 6
order_by_type = false
case_sensitive = true
combine_as_imports = true
line_length = 120
atomic = true

[tool.ruff]
line-length = 150
select = ["E", "F"]
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


[tool.taskipy.tasks]
start = "python -m src/norg"
lint = "ruff src/norg"
build = "poetry build"
test-nocov = "pytest -n auto"
test = "pytest -n auto --cov-report= --cov --ff"
retest = "pytest -n auto --cov-report= --cov --lf"
html = "coverage html"
report = "coverage report"
doc = "interrogate -c pyproject.toml"
isort = "isort ."
freeze = "poetry export -f requirements.txt > requirements.txt --without-hashes"

[tool.black]
line-length = 150
